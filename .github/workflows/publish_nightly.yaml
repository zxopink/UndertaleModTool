name: Publish Nightly Build

on:
  workflow_run:
    workflows:
      - Nightly Build
    types:
      - completed

jobs:
  upload:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    steps:
    - name: Download artifacts
      uses: dawidd6/action-download-artifact@v2.26.0
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        run_id: ${{ github.event.workflow_run.id }}
        skip_unpack: true
        path: ./artifacts
      
    - name: Delete tag and release
      uses: dev-drprasad/delete-tag-and-release@v1.0
      with:
        delete_release: true
        tag_name: nightly
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: nightly
        name: Nightly
        prerelease: false
        fail_on_unmatched_files: true
        files: |
          ./artifacts/*
        body: |
          Hellom..
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
    - name: Check and fix the release
      uses: actions/github-script@v3
      with:
        script: |
          // Wait 10 seconds
          await new Promise(r => setTimeout(r, 10000));

          const {owner, repo} = context.repo;
          const listReleasesResponse = await github.repos.listReleases({
            owner,
            repo
          });

          if (listReleasesResponse.status !== 200)
            throw new Error("Error listing releases");

          let release_id;
          for (let release of listReleasesResponse.data) {
            if (release.tag_name !== "nightly")
              continue;

            console.log(release);

            if (!release.draft) {
              console.log("Found published nightly release - no need to do anything.");
              return;
            }

            if (release_id == undefined)
              release_id = release.id;
          }

          if (release_id == undefined)
            throw new Error("The nightly release was not found.");

          console.warn("Found the nightly release that is draft.\nTrying to publish...");

          try {
            await github.repos.updateRelease({owner, repo, release_id, draft: false});
          }
          catch (err) {
            if ('status' in err && err.status == 422) {
              console.log('A non-draft release already exists?');
              console.error(err);
              return;
            }
            else
              throw err;
          }

          console.log("The draft release was published successfully.");
